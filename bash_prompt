# Try loading git-sh-prompt from git-core
if [ -f /usr/lib/git-core/git-sh-prompt ]; then
  source /usr/lib/git-core/git-sh-prompt
  export GIT_PS1_SHOWDIRTYSTATE=1
fi

# Responsive Prompt
parse_git_branch() {
  local BLUE="\[\033[1;34m\]"
  local GREEN="\[\033[1;32m\]"
  local RED="\[\033[1;31m\]"
  local YELLOW="\[\033[1;33m\]"
  local WHITE="\[\033[1;37m\]"

  local DEFAULT="\[\033[0m\]"

  if [[ 0 -eq $(declare -f -F __git_ps1 > /dev/null) ]]; then
    branch=$(__git_ps1 "[%s]")
  else
    branch=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\[\1\]/')
  fi

  if [[ $(tput cols) -lt 110 ]]; then
    branch=$(echo $branch | sed s/develop/d/1)
    branch=$(echo $branch | sed s/hotfix/h/1)
    branch=$(echo $branch | sed s/feature/f/1)
    branch=$(echo $branch | sed s/master/m/1)
    branch=$(echo $branch | sed s/release/r/1)
  fi

  PS1="${debian_chroot:+($debian_chroot)}\u@\h:\w${YELLOW}${branch}${DEFAULT}\$ "
}

PROMPT_COMMAND=parse_git_branch
